syntax = "proto3";

package channel;

import "google/api/annotations.proto";

option go_package = "coen-chat/protos/channel";

service ChannelService {
  rpc GetChannel(GetChannelRequest) returns (GetChannelResponse) {
    option (google.api.http) = {
      get: "/api/v1/channels/{channel_id}"
    };
  }
  rpc GetChannelList(GetChannelListRequest) returns (GetChannelListResponse) {
    option (google.api.http) = {
      get: "/api/v1/channels"
    };
  }
  rpc CreateChannel(CreateChannelRequest) returns (CreateChannelResponse) {
    option (google.api.http) = {
      post: "/api/v1/channels"
      body: "*"
    };
  }
  rpc UpdateChannel(UpdateChannelRequest) returns (UpdateChannelResponse) {
    option (google.api.http) = {
      patch: "/api/v1/channels/{channel_id}"
      body: "*"
    };
  }
  rpc DeleteChannel(DeleteChannelRequest) returns (DeleteChannelResponse) {
    option (google.api.http) = {
      delete: "/api/v1/channels/{channel_id}"
    };
  }
  rpc JoinChannel(JoinChannelRequest) returns (JoinChannelResponse) {
    option (google.api.http) = {
      post: "/api/v1/channels.join"
      body: "*"
    };
  }
}

message Channel {
  uint64 channel_id = 1;
  string channel_name = 2;
  string created_by = 3;
  string updated_at = 4;
}

message Member {
  string email = 1;
  uint64 channel_id = 2;
}

message Message {
  string message_id = 1;
  string email = 2;
  string content = 3;
  string created_at = 4;
  string updated_at = 5;
}

message TokenResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message GetChannelRequest {
  uint64 channel_id = 1;
}
message GetChannelResponse {
  Channel channel = 1;
  TokenResponse tokenResponse = 2;
  repeated Member member = 3;
  repeated Message message = 4;
}
message GetChannelListRequest {
  bool is_joined = 1;
}
message GetChannelListResponse {
  repeated Channel channel = 1;
  TokenResponse tokenResponse = 2;
}
message CreateChannelRequest {
  string channel_name = 1;
}
message CreateChannelResponse{
  TokenResponse tokenResponse = 1;
}
message UpdateChannelRequest {
  uint64 channel_id = 1;
  string channel_name = 2;
}
message UpdateChannelResponse{
  TokenResponse tokenResponse = 1;
}
message DeleteChannelRequest {
  uint64 channel_id = 1;
}
message DeleteChannelResponse{
  TokenResponse tokenResponse = 1;
}
message JoinChannelRequest {
  uint64 channel_id = 1;
}
message JoinChannelResponse{
  TokenResponse tokenResponse = 1;
}